module InferModel
  module Parsers
    Error: untyped

    interface _Parsing
      def value: () -> ::String?
      def allow_blank: () -> bool
    end

    BY_TYPE: { boolean: untyped, datetime: untyped, decimal: untyped, integer: untyped, json: untyped, time: untyped, uuid: untyped, string: untyped }

    class Boolean
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      TRUTHY_VALUES_LOWERCASE: ::Array[::String]
      FALSEY_VALUES_LOWERCASE: ::Array[::String]

      def call: () -> (nil | false | true | untyped)
    end

    class DateTime
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      ACCEPTABLE_DATETIME_FORMATS: ::Array[::String]

      def call: () -> (nil | untyped)
    end

    class Decimal
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      def call: () -> untyped
    end

    class Integer
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      def call: () -> untyped
    end

    class JSON
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      def call: () -> untyped
    end

    class Time
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      ACCEPTABLE_TIME_FORMATS: ::Array[::String]

      def call: () -> (nil | untyped)
    end

    class UUID
      extend InferModel::Callable
      extend Dry::Initializer
      include _Parsing

      UUID_REGEX: ::Regexp

      def call: () -> (nil | untyped)
    end
  end
end
